import { expect } from 'chai';
import ApiVideoClient from '../src';
{{# apiInfo.apis }}
    {{^x-client-hidden}}
import {{classFilename}} from '../{{ apiPackage }}/{{classFilename}}';
    {{/x-client-hidden}}
{{/ apiInfo.apis }}

describe('ApiVideoClient', () => {
{{# apiInfo.apis }}
    {{^x-client-hidden}}
    it('should use the {{classFilename}} class', () => {
        const client = new ApiVideoClient({ apiKey: 'test' });
        expect(client.{{classVarName}}).instanceOf({{classFilename}});
    });
    {{/x-client-hidden}}
{{/ apiInfo.apis }}

  it('should validate the application name value', () => {
     expect(
      () => new ApiVideoClient({ applicationName: 'application name' })
    ).to.throw(
      "Invalid applicationName value. Allowed characters: A-Z, a-z, 0-9, '-', '_'. Max length: 50."
    );

    expect(
      () =>
        new ApiVideoClient({
          applicationName:
            '012345678901234567890123456789012345678901234567891',
        })
    ).to.throw(
      "Invalid applicationName value. Allowed characters: A-Z, a-z, 0-9, '-', '_'. Max length: 50."
    );

    expect(
      () =>
        new ApiVideoClient({ applicationName: 'my-great-application1' })
    ).not.to.throw();

    expect(
      () =>
        new ApiVideoClient({ applicationVersion: '1.0.0' })
    ).to.throw(
      "applicationName is mandatory when applicationVersion is set."
    );

    expect(
      () =>
        new ApiVideoClient({ applicationName: "application", applicationVersion: '1.1234.0' })
    ).to.throw(
      "Invalid applicationVersion value. The version should match the xxx[.yyy][.zzz] pattern."
    );

    expect(
      () =>
        new ApiVideoClient({ applicationName: "application", applicationVersion: '1.123.0' })
    ).not.to.throw();
  });
});
